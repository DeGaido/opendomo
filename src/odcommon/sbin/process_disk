#!/bin/sh
#desc: Configure local drives

# Variables
DEVICE="$1"
ID_FS_LABEL=`blkid -o udev -s LABEL /dev/$DEVICE | cut -f2 -d= | uniq`
ODCFG="/mnt/$DEVICE/opendomo.cfg"
MOUNT=`mount | grep -c $DEVICE`

if test -f $ODCFG; then
	CONFDEVICE=`grep ^CONFDEVICE= $ODCFG | sed 's/\"//g' | cut -f2 -d= `
	SYSDEVICE=`grep ^SYSDEVICE= $ODCFG | sed 's/\"//g' | cut -f2 -d= `
	HOMEDEVICE=`grep ^HOMEDEVICE= $ODCFG | sed 's/\"//g' | cut -f2 -d=`
	LABEL=`grep ^LABEL= $ODCFG | sed 's/\"//g' | cut -f2 -d=`
	LOGDIR=`grep ^LOGDIR= $ODCFG | sed 's/\"//g' | cut -f2 -d=`
fi

DFCHANGES=dfchange.img
CTCHANGES=ctchange.img
HOMEIMG=homefs.img

CHANGEDIR=/run/fs/change
TEMPFSDIR=/run/fs/tmpfs
SWITCHDIR=/run/fs/root
INITRDDIR=/run/fs/initrd
MNTINITRD=$SWITCHDIR/run/fs/initrd

HOMESIZE=10000

# Configuration label don't exist, change to fs label or device
if test -z $LABEL; then
	if test -z $ID_FS_LABEL; then
		LABEL=$DEVICE
	else
		LABEL=$ID_FS_LABEL
	fi
fi

# Previous checks
if [ "$MOUNT" = "0" ]; then
	rm /mnt/$DEVICE
	logger "  Drive $DRIVE can't be mounted"
	exit 1
fi
if test -e "/media/$LABEL"; then
	logger "  Drive $DRIVE is already processed"
	exit 1
fi

# Uncompress default image in first start
if test -f /mnt/$DEVICE/$DFCHANGES.gz; then
	/bin/gunzip $DFCHANGES
fi

# Selecting rootfs to mount
if test -f /mnt/$DEVICE/$DFCHANGES; then
	CHANGEIMG=$DFCHANGES
fi
if test -f /mnt/$DEVICE/$CTCHANGES; then
	CHANGEIMG=$CTCHANGES
fi

# Configure drives
if [ "$SYSDEVICE" = "1" ]; then
	# Creating folders for new rootfs
	mkdir -p $CHANGEDIR $TEMPFSDIR $SWITCHDIR $INITRDDIR

	# Mounting new root parts
	mount /mnt/system/$CHANGEIMG $CHANGEDIR
	mount -t tmpfs none $TEMPFSDIR
	mount --bind / $INITRDDIR
	if
		mount -t aufs -o dirs=$TEMPFSDIR:$INITRDDIR:$CHANGEDIR=ro aufs $SWITCHDIR
	then
		CHROOT=$SWITCHDIR
		# Creating apt links
		ln -s /mnt/odconf/files/apt/apt-db $CHROOT/var/lib/apt
		ln -s /mnt/odconf/files/apt/apt-cache $CHROOT/var/cache/apt
	fi

	# Creating system link
	logger "  Device: $device linked as system drive"
	ln -s /mnt/$DEVICE $CHROOT/mnt/system
fi

if [ "$CONFDEVICE" = "1" ]; then
	logger "  Device: $device linked as configuration drive"
	ln -s /mnt/$DEVICE $CHROOT/mnt/odconf
fi

if [ "$LOGDIR" != "" ]; then
	if test -d /mnt/$DEVICE/$LOGDIR; then
		logger "$CONF_LOG is the logs dir"
	fi
fi

if [ "$HOMEDEVICE" = "1" ]; then
	logger "  Device: $device linked as home drive"

	# Creating and mount homefs
	if ! test -f /mnt/$DEVICE/$HOMEIMG; then
		dd if=/dev/zero of=/mnt/$DEVICE/$HOMEIMG bs=1024 count=$HOMESIZE
		mkfs.ext2 /mnt/$DEVICE/$HOMEIMG
	fi
	mount /mnt/$DEVICE/$HOMEIMG $CHROOT/home
fi

# Allways link drive to /media
ln -s /mnt/$DEVICE $CHROOT/media/$LABEL

# Changing / to mounted new root
if ! test -z $SWITCHDIR; then
	mkdir -p $MNTINITRD

	# Move mounted drives to new rootfs
	cd /mnt
	for drive in *; do
		mkdir -p $SWITCHDIR/mnt/$drive
		mount --move /mnt/$drive $SWITCHDIR/mnt/$drive
		rmdir /mnt/$drive
	done
	# Move kernel filesystems to new rootfs
        mount --move /dev  $SWITCHDIR/dev
        mount --move /proc $SWITCHDIR/proc
        mount --move /sys  $SWITCHDIR/sys
        mount --move /tmp  $SWITCHDIR/tmp
        mount --move /run  $SWICTHDIR/run

	exec pivot_root $SWITCHDIR $MNTINITRD
fi
